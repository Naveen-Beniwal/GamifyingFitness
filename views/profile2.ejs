<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Innovative User Account</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
    ></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/luxon/2.3.1/luxon.min.js"></script>
    <style>
      @keyframes float {
        0% {
          transform: translateY(0px);
        }
        50% {
          transform: translateY(-20px);
        }
        100% {
          transform: translateY(0px);
        }
      }
      .float {
        animation: float 6s ease-in-out infinite;
      }
      .chat-bubble::before {
        content: "";
        position: absolute;
        left: -10px;
        top: 50%;
        border-right: 10px solid rgba(255, 255, 255, 0.2);
        border-top: 10px solid transparent;
        border-bottom: 10px solid transparent;
      }
    </style>
  </head>

  <body
    class="bg-gradient-to-br from-purple-400 via-pink-500 to-red-500 min-h-screen flex items-center justify-center p-4"
  >
    <div
      x-data="userAccount()"
      class="bg-white bg-opacity-10 backdrop-filter backdrop-blur-lg rounded-3xl shadow-2xl w-full max-w-6xl overflow-hidden"
    >
      <div class="flex flex-col lg:flex-row">
        <div
          class="lg:w-1/4 bg-white bg-opacity-20 p-8 flex flex-col items-center justify-start space-y-4"
        >
          <div class="relative w-40 h-40 group">
            <img
              :src="profileImage"
              alt="Upload"
              class="w-full h-full rounded-full object-cover border-4 border-white shadow-lg float"
            />
            <div
              class="absolute bottom-0 right-0 bg-green-400 rounded-full w-6 h-6 border-4 border-white"
            ></div>
            <div
              class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-full"
            >
              <label for="profileImageUpload" class="cursor-pointer text-white">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-8 w-8"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
                  />
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"
                  />
                </svg>
              </label>
              <input
                id="profileImageUpload"
                type="file"
                class="hidden"
                @change="uploadProfileImage"
              />
            </div>
          </div>
          <h2 class="text-2xl font-bold text-white" x-text="userName"></h2>
          <p class="text-white opacity-80" x-text="userTitle"></p>
          <div class="flex space-x-2">
            <template x-for="(tabItem, index) in tabs" :key="index">
              <button
                @click="activeTab = tabItem.id"
                :class="{ 'bg-white text-purple-600': activeTab === tabItem.id, 'bg-purple-600 text-white': activeTab !== tabItem.id }"
                class="px-4 py-2 rounded-full transition duration-300 ease-in-out"
                x-text="tabItem.name"
              ></button>
            </template>
          </div>
        </div>
        <div class="lg:w-3/4 p-8">
          <!-- Profile Section -->
          <div x-show="activeTab === 'profile'" class="space-y-6">
            <!-- About Me -->
            <div
              class="bg-white bg-opacity-20 rounded-2xl p-6 transform hover:scale-105 transition duration-300"
            >
              <h3 class="text-xl font-semibold text-white mb-4">About me</h3>
              <p x-text="userBio" class="text-white opacity-80"></p>
            </div>
            <!-- Skills -->
            <div
              class="bg-white bg-opacity-20 rounded-2xl p-6 transform hover:scale-105 transition duration-300"
            >
              <h3 class="text-xl font-semibold text-white mb-4">
                Skills I Have
              </h3>
              <div class="flex flex-wrap gap-2">
                <template x-for="skill in userSkills" :key="skill">
                  <span
                    class="bg-purple-500 text-white px-3 py-1 rounded-full text-sm"
                    x-text="skill"
                  ></span>
                </template>
              </div>
            </div>
            <!-- Achievements -->
            <div
              class="bg-white bg-opacity-20 rounded-2xl p-6 transform hover:scale-105 transition duration-300"
            >
              <h3 class="text-xl font-semibold text-white mb-4">
                Achievements
              </h3>
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                <template x-for="award in userAwards" :key="award.id">
                  <div
                    class="flex items-center space-x-2 bg-white bg-opacity-10 rounded-lg p-2"
                  >
                    <div class="text-2xl" x-text="award.emoji"></div>
                    <div>
                      <div
                        class="text-white font-semibold"
                        x-text="award.name"
                      ></div>
                      <div
                        class="text-white text-xs opacity-70"
                        x-text="award.description"
                      ></div>
                    </div>
                  </div>
                </template>
              </div>
            </div>
          </div>

          <!-- Chat Section -->
          <div x-show="activeTab === 'chat'" class="space-y-6">
            <div
              class="bg-white bg-opacity-20 rounded-2xl p-6 h-96 flex flex-col"
            >
              <div
                x-ref="chatContainer"
                class="flex-grow overflow-y-auto space-y-4 mb-4"
              >
                <template x-for="message in chatMessages" :key="message.id">
                  <div
                    :class="{'flex justify-end': message.sender === 'user', 'flex justify-start': message.sender === 'other'}"
                  >
                    <div
                      :class="{'bg-purple-500 text-white': message.sender === 'user', 'bg-white bg-opacity-20 text-white': message.sender === 'other'}"
                      class="max-w-xs px-4 py-2 rounded-lg chat-bubble relative"
                    >
                      <p x-text="message.text"></p>
                      <small
                        class="block mt-1 text-xs opacity-70"
                        x-text="formatMessageTime(message.timestamp)"
                      ></small>
                    </div>
                  </div>
                </template>
              </div>
              <div class="flex space-x-2">
                <input
                  type="text"
                  x-model="newMessage"
                  @keyup.enter="sendMessage"
                  placeholder="Message Here..."
                  class="flex-grow bg-white bg-opacity-20 rounded-lg px-4 py-2 text-white placeholder-white placeholder-opacity-60 focus:outline-none focus:ring-2 focus:ring-purple-600"
                />
                <button
                  @click="sendMessage"
                  class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition duration-300 ease-in-out"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M14 5l7 7m0 0l-7 7m7-7H3"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>

          <!-- Posts Section -->
          <div x-show="activeTab === 'posts'" class="space-y-6">
            <div
              class="bg-white bg-opacity-20 rounded-2xl p-6 transform hover:scale-105 transition duration-300"
            >
              <h3 class="text-xl font-semibold text-white mb-4">Posts</h3>

              <!-- Add post rendering logic here -->
              <div class="container mx-auto">
                <div
                  class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6"
                >
                  <% user.posts.forEach(function(post) { %>
                  <div
                    class="bg-gray-800 bg-opacity-80 rounded-xl overflow-hidden transform hover:scale-105 transition duration-300 shadow-lg"
                  >
                    <img
                      src="<%= post.image %>"
                      class="w-full h-48 object-cover"
                      alt="Post image"
                    />
                    <div class="p-4">
                      <h5 class="text-white text-lg font-semibold mb-2">
                        <%= post.imageText %>
                      </h5>
                    </div>
                  </div>
                  <% }) %>
                </div>
              </div>

              <template x-for="post in userPosts" :key="post.id">
                <div
                  class="bg-gray-800 bg-opacity-80 rounded-lg p-4 mb-4 shadow-lg"
                >
                  <h4
                    class="text-lg font-semibold text-white"
                    x-text="post.title"
                  ></h4>
                  <p
                    class="text-white opacity-80 mt-2"
                    x-text="post.content"
                  ></p>
                </div>
              </template>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
      function userAccount() {
        return {
          activeTab: "profile",
          tabs: [
            { id: "profile", name: "Profile" },
            { id: "chat", name: "Chat" },
            { id: "posts", name: "Posts" },
          ],
          userName: "<%= user.username %>",
          userTitle: "Web Developer",
          userBio: "Passionate about spreading fitness among the youths.",
          userSkills: ["Yoga Guru", "Elite Runner", "Self Defense"],
          userAwards: [
            {
              id: 1,
              name: "Gold in Yoga (Nationals)",
              description: "June 2024",
              emoji: "🏆",
            },
            {
              id: 2,
              name: "Black Belt",
              description: "January 2024",
              emoji: "🥋",
            },
          ],
          profileImage:
            "<%= user.profileImage || 'https://via.placeholder.com/150' %>", // Ensure this is the correct URL
          chatMessages: [
            {
              id: 1,
              text: "Hello! How can I help you?",
              sender: "other",
              timestamp: Date.now() - 10000,
            },
            {
              id: 2,
              text: "Can you tell me more about your skills?",
              sender: "user",
              timestamp: Date.now() - 5000,
            },
          ],
          newMessage: "",
          userPosts: "<%= JSON.stringify(user.posts) %>",
          sendMessage() {
            if (this.newMessage.trim() !== "") {
              this.chatMessages.push({
                id: Date.now(),
                text: this.newMessage,
                sender: "user",
                timestamp: Date.now(),
              });
              this.newMessage = "";
              this.scrollToBottom();
            }
          },
          scrollToBottom() {
            this.$nextTick(() => {
              this.$refs.chatContainer.scrollTop =
                this.$refs.chatContainer.scrollHeight;
            });
          },
          formatMessageTime(timestamp) {
            return luxon.DateTime.fromMillis(timestamp).toLocaleString(
              luxon.DateTime.TIME_SIMPLE
            );
          },
          uploadProfileImage(event) {
            const file = event.target.files[0];
            if (file) {
              const formData = new FormData();
              formData.append("profileImage", file);
              fetch("/upload-profile-image", {
                method: "POST",
                body: formData,
              })
                .then((response) => response.json())
                .then((data) => {
                  this.profileImage = data.url;
                  // Optionally update the profile image in the database
                  fetch("/update-profile", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                      userId: "<%= user._id %>",
                      profileImageUrl: data.url,
                    }),
                  });
                })
                .catch((error) => console.error("Error:", error));
            }
          },
        };
      }
    </script>
  </body>
</html>
